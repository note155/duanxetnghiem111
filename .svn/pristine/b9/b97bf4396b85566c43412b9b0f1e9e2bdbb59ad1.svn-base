@page "/lichsuDl"
@rendermode InteractiveAuto
@inject NavigationManager navigation;
@attribute [Authorize]
<div class="actions">
    <a class="btn btn-success" href="/lichsuDL">Lịch Sử Đặt Lịch</a>
    <a style="border-color:lawngreen" class="btn btn-outline-success" href="/lichsuTT">Lịch Sử Thanh Toán</a>
</div>
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Đơn yêu cầu xét nghiệm : @patient.Hoten</h3>
                <div class="InputSelectWrapper">
                    <InputSelect class="form-control" ValueChanged="@((int value)=>FilterData(value))" ValueExpression="@(()=>aa)" Value="aa">
                        <option value="0">Tất Cả</option>
                        <option value="1">Chưa Hoàn Thành</option>
                        <option value="2">Đã Hoàn thành</option>
                        <option value="3">Bị từ chối</option>
                    </InputSelect>
                </div>
            </div>
            <div class="card-body">
                @if (!AllDXN.Any())
                {
                    <p><em>Loading ...</em></p>
                }
                @if (AllDXN.Any())
                {
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead>
                                    <tr>
                                        <th>Id</th>
                                        <th>Trạng thái</th>
                                        <th>Ngày lấy máu </th>
                                        <th>Giờ lấy máu </th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var DXN in AllDXN)
                                    {
                                        <tr>
                                            <td>@DXN.Id</td>
                                            <td>@DXN.Trangthai</td>
                                            <td>@DXN.Ngaydat.ToString("dd/MM/yyyy")</td>
                                            <td>@DXN.giolaymau</td>
                                            <td>
                                                <a class="btn btn-success" href="/XCTDon/@DXN.Id"> Chi Tiết </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                }
                else
                {
                    <div class="alert alert-info"> Không có danh sách đơn xét nghiệm</div>
                }
            </div>
        </div>
    </div>
</div>


@code {
    [Inject]
    protected AuthenticationStateProvider AuthenticationStateProvider { get; set; }
    public string UserName { get; set; }
    User patient = new User();
    
    private int aa;
    public List<DonXetNghiem> AllDXN { get; set; } = new();
    public List<DonXetNghiem> DXN { get; set; } = new();
    public List<User> Alluser { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        UserName = authState.User.Identity.Name;
        patient = await Usertservice.getuserbyemail(UserName);
        if (patient == null)
        {
            navigation.NavigateTo("/AddUser");
        }
        Alluser = await Usertservice.getalluserbyemailAsync(UserName);
        foreach(var us in Alluser)
        {
            var don = await DXNservice.getallbyiduserAsync(us.Id);
            foreach(var a in don)
            {
                DXN.Add(a);
            }
        }
        LoadAlLStudents();
    }
    private void FilterData(int selectedValue)
    {
        aa = selectedValue;
        LoadAlLStudents();
    }
    public void LoadAlLStudents()
    {
        // var students = await GenericService.GetAllAsync(student, "api/Student/All-Students");

        AllDXN.Clear();

        if (DXN is null) return;
        foreach (var student in DXN)
        {
            if (aa == 0)
            {
                AllDXN.Add(student);
            }
            if (aa == 1)
            {
                if (student.Trangthai != "Hoàn thành" && student.Trangthai != "Từ Chối")
                {
                    AllDXN.Add(student);
                }
            }
            if (aa == 2)
            {
                if (student.Trangthai == "Hoàn thành")
                {
                    AllDXN.Add(student);
                }
            }
            if (aa == 3)
            {
                if (student.Trangthai == "Từ Chối")
                {
                    AllDXN.Add(student);
                }
            }
        }
    }
}