@page "/xemKQXN/{id:int}"
@using Shared.form
@rendermode InteractiveAuto
@inject NavigationManager navigation;
@attribute [Authorize]
@layout AdminLayout

<div class="patient-registration-container">
    <div class="patient-info">
        <h2>Thông tin bệnh nhân</h2>
        <div class="info">
            <p><strong>Họ tên:</strong> @user.Hoten</p>
            <p><strong>Ngày sinh:</strong> @user.Ngaysinh.ToString("dd/MM/yyyy")</p>
            <p><strong>Số điện thoại:</strong> @user.SDT</p>
            <p><strong>Địa chỉ:</strong> @user.Diachi</p>
            <p><strong>Email:</strong> @user.Email</p>
            <p><strong>Giới tính:</strong> @gioitinh(@user.Gioitinh)</p>
        </div>
        <div style="width:100%" class="row tientrinh">
            <h2>
                Tiến trình
            </h2>
            @foreach (var tt in allttrang)
            {
                <div class="timeline-item">
                    <div class="timeline-item-content">
                        <span class="time">@tt.thoigian.ToString("HH:mm dd/MM/yyyy")</span>
                        <p>@tt.trangthai</p>
                    </div>
                </div>
            }
         </div>
        <div style="width:100%" class="row tientrinh">
            <h2>
                Chi tiết xét nghiệm
            </h2>
            <p>Ngày nhận mẫu: @mau.ngaynhanmau</p>
            <p>Khoa: @loadkhoa(mau.khoaId)</p>
            <p>Phòng: @loadphong(mau.PhongId)</p>
            <p>Máy thực hiện: @loadmay(mau.MayxetnghiemId ?? 0)</p>
         </div>
    </div>

    <div class="test-registration-form">
        <h2>Thông tin đơn đăng ký xét nghiệm</h2>
        <div style="background-color:greenyellow;color:black" class="btn btn-primary btn-lg disabled">  <strong>Trạng Thái: </strong>@Input.Trangthai</div>
        <EditForm Model="Input" method="post" OnValidSubmit="add" FormName="register" class="profile-form">
            <DataAnnotationsValidator />
            <hr />


            <div class="form-group">
                <label for="ngaytaodon">Ngày tạo đơn</label>
                <InputDate @bind-Value="Input.ngaytaodon" class="form-control" id="Ngaytaodon" readonly />
                <ValidationMessage For="() => Input.ngaytaodon" class="text-danger" />
            </div>
            <div class="form-group">
                <label for="Ngaydat">Ngày Lấy Máu</label>
                <InputDate @bind-Value="Input.Ngaydat" class="form-control" id="Ngaydat" min="@DateTime.Now.ToString("yyyy-MM-dd")" readonly />
                <ValidationMessage For="() => Input.Ngaydat" class="text-danger" />
            </div>
            <div class="form-group">
                <label for="giolaymau">Giờ lấy máu</label>
                <InputText @bind-Value="Input.giolaymau" class="form-control" id="giolaymau" readonly />
                <ValidationMessage For="() => Input.giolaymau" class="text-danger" />
            </div>
        </EditForm>
        @if (SelectedDoctor != null)
        {
            <div class="doctor-info">
                <div class="doctor-details">
                    <h3>Bác sĩ lấy mẫu:</h3>
                    <p><strong>Họ tên:</strong> @SelectedDoctor.Hoten</p>
                    <p><strong>Chức vụ:</strong> @SelectedDoctor.Chucvu</p>
                    <p><strong>Số điện thoại:</strong> @SelectedDoctor.SDT</p>
                    <p><strong>Email:</strong> @SelectedDoctor.Email</p>
                </div>
                <div class="doctor-image">
                    <img src="@SelectedDoctor.Anh" alt="Ảnh bác sĩ">
                </div>

                <!-- Thêm các trường thông tin khác của bác sĩ nếu cần -->
            </div>
            <div class="doctor-info">
                <div class="doctor-details">
                    <h3>Bác sĩ thực hiện xét nghiệm:</h3>
                    <p><strong>Họ tên:</strong> @SelectedDoctor1.Hoten</p>
                    <p><strong>Chức vụ:</strong> @SelectedDoctor1.Chucvu</p>
                    <p><strong>Số điện thoại:</strong> @SelectedDoctor1.SDT</p>
                    <p><strong>Email:</strong> @SelectedDoctor1.Email</p>
                </div>
                <div class="doctor-image">
                    <img src="@SelectedDoctor1.Anh" alt="Ảnh bác sĩ">
                </div>

                <!-- Thêm các trường thông tin khác của bác sĩ nếu cần -->
            </div>
        }
        <div>
            <h2>Kết Quả</h2>
            <EditForm Model="Inputkq" method="post"  FormName="addkq" class="profile-form">
                <DataAnnotationsValidator />
                <hr />
                <div class="form-group">
                    <label for="ngaycoKQ">Ngày Có Kết Quả</label>
                    <InputDate @bind-Value="Inputkq.ngaycoKQ" class="form-control" id="ngaycoKQ" readonly />
                    <ValidationMessage For="() => Inputkq.ngaycoKQ" class="text-danger" />
                </div>
                <div class="form-group">
                    <label for="khoa">Khoa</label>
                    <Input Value="@loadkhoa(Inputkq.khoa)" class="form-control" id="khoa" readonly />
                </div>
                <div class="form-group">
                    <label for="nhommau">Nhóm Máu</label>
                    <InputText @bind-Value="Inputkq.nhommau" class="form-control" id="nhommau" readonly />
                    <ValidationMessage For="() => Inputkq.nhommau" class="text-danger" />
                </div>
                <div class="form-group">
                    <label for="ghiChu">Ghi chú</label>
                    <InputTextArea @bind-Value="Inputkq.ghiChu" class="form-control" id="ghiChu" readonly />
                    <ValidationMessage For="() => Inputkq.ghiChu" class="text-danger" />
                </div>

                <!-- Input for list of KQandCS -->
                <h3>Danh sách Kết Quả và Chỉ Số</h3>
                @if (Inputkq.kQandCs != null)
                {
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Chỉ Số</th>
                                <th>Kết Quả</th>
                                <th>CSBT</th>
                                <th>Đơn Vị</th>
                            </tr>
                        </thead>
                        @foreach (var tl in gxndachon)
                        {
                            <tr><td colspan="4"><strong>Gói Xét Nghiệm:</strong>@tl.TenGoi</td></tr>
                            @foreach (var kqandcs in Inputkq.kQandCs)
                            {
                                if (kqandcs.goi == tl.Id)
                                {
                                    <tr>
                                        <td>@loadtenchiso(kqandcs.id)</td>
                                        <td>
                                            <InputText @bind-Value="kqandcs.kq" class="form-control" readonly />
                                            <ValidationMessage For="() => kqandcs.kq" class="text-danger" />
                                        </td>
                                        <td>
                                            @loadcsbt(kqandcs.id)
                                        </td>
                                        <td>
                                            @loaddonvi(kqandcs.id)
                                        </td>
                                    </tr>
                                }
                            }
                        }
                    </table>
                    <a href="/listdscoKQ"><button style="background-color:red" class="btn btn-primary"> Trở về </button></a>
                }
            </EditForm>

        </div>
    </div>
</div>
@code {
    [Parameter]
    public int id { get; set; }

    public List<Tinhtrang> allttrang { get; set; } = new();
    int goi1 = -1;
    private BacSi SelectedDoctor, SelectedDoctor1 = null;
    public List<GoiXetNghiem> allGXN { get; set; } = new();
    public List<Phong> allPhong { get; set; } = new();
    public List<MayXetNghiem> allmay { get; set; } = new();
    public List<GoiXetNghiem> gxndachon { get; set; } = new();
    public List<DXNandGXN> dxn { get; set; } = new();
    public List<Chiso> allchiso { get; set; } = new();
    public DonXetNghiem Input { get; set; } = new();
    private User user { get; set; } = new();
    public Chiso cs { get; set; } = new();
    private KetQuaXetNghiem kq { get; set; } = new();
    private Mau mau { get; set; } = new();
    public List<Khoa> allkhoa { get; set; } = new();
    [SupplyParameterFromForm]
    public KQXN Inputkq { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        await checkbs();
        allttrang = await TTrangservice.getbyidAsync(id);
        Input = await DXNservice.getbyid(id);
        user = await Usertservice.getuserbyid(Input.UserId);
        allGXN = await GXNservice.getallAsync();
        dxn = await DXNservice.getallGXNAsync(id);
        allkhoa = await Khoaservice.getallAsync();
        loadgxndachon();
        allPhong = await Phongservice.getallAsync();
        allmay = await MayXNservice.getallAsync();
        allchiso = await CSservice.getallAsync();
        Inputkq.kQandCs = new List<ChisoKq>();
        SelectedDoctor = await bacsiservice.getbyid(Input.BacSiId??0);
        mau = await Mauservice.getbyid(id);
        SelectedDoctor1 = await bacsiservice.getbyid(mau.bacsiid??0);
        foreach (var a in gxndachon)
        {
            var listcs = await GXNservice.getallCSbyidAsync(a.Id);
            foreach (var b in listcs)
            {
                ChisoKq kq = new ChisoKq
                    {
                        id = b.ChisoId,
                        goi = a.Id
                    };
                Inputkq.kQandCs.Add(kq);
            }
        }
        kq = await KQXNservice.getbyid(id);
        Inputkq.ngaycoKQ=kq.ngaycoKQ;
        Inputkq.khoa=kq.khoaId;
        Inputkq.nhommau=kq.nhommau;
        Inputkq.ghiChu = kq.ghiChu;
        var qq = await KQXNservice.getallCSbyidAsync(kq.Id);
        foreach (var a in Inputkq.kQandCs)
        {
            foreach(var b in qq)
            {
                if (a.id == b.ChisoId && a.goi == b.idgoi)
                {
                    a.kq = b.KetQua;
                    a.goi = b.idgoi ?? 0;
                }
            }
        }
    }
    public async Task checkbs()
    {
        var authState = await checkbss.GetAuthenticationStateAsync();
        var UserName = authState.User.Identity.Name;
        var bs = await bacsiservice.getbyemail(UserName);
        if (bs == null)
        {
            navigation.NavigateTo("/err");
        }
    }
    private async Task add()
    {

    }
    private void loadgxndachon()
    {
        foreach (var a in dxn)
        {

            foreach (var b in allGXN)
            {
                if (b.Id == a.GoiXetNghiemId)
                {
                    gxndachon.Add(b);
                }
            }
            allGXN.RemoveAll(item => item.Id == a.GoiXetNghiemId);
        }
    }
    private string loadphong(int id)
    {
        foreach (var i in allPhong)
        {
            if (i.Id == id)
            {
                return i.maphong+" - "+i.ten;
            }
        }
        return null;
    }
    private string loadmay(int id)
    {
        foreach (var i in allmay)
        {
            if (i.Id == id)
            {
                return i.Name;
            }
        }
        return null;
    }
    private string loadtengoi(int id)
    {
        foreach (var i in gxndachon)
        {
            if (i.Id == id)
            {
                return i.TenGoi;
            }
        }
        return null;
    }
    private string loadcsbt(int id)
    {
        foreach (var i in allchiso)
        {
            if (i.Id == id)
            {
                return i.CSBT;
            }
        }
        return null;
    }
    private string loaddonvi(int id)
    {
        foreach (var i in allchiso)
        {
            if (i.Id == id)
            {
                return i.DonVi;
            }
        }
        return null;
    }
    private string loadkhoa(int id)
    {
        foreach (var i in allkhoa)
        {
            if (i.Id == id)
            {
                return i.ten;
            }
        }
        return null;
    }
    private string loadtenchiso(int id)
    {
        foreach (var i in allchiso)
        {
            if (i.Id == id)
            {
                return i.ten;
            }
        }
        return null;
    }
    private String gioitinh(bool a)
    {
        if (a)
        {
            return "Nam";
        }
        else
        {
            return "Nữ";
        }
    }
}
