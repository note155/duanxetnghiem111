@page "/ListBS"
@rendermode InteractiveAuto
 @inject IJSRuntime JS
 @inject NavigationManager navigation;
@attribute [Authorize]
@layout AdminLayout
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Danh sách bác sĩ</h3>
            </div>
            <div class="card-body">
                <div class="row">
                    <p><a class="btn btn-success float-end" href="/AddBS"> Thêm bác sĩ </a></p>
                    <div class="col-md-12">
                        <div class="card">
                            <div class="card-header"></div>
                            @if (!AllBS.Any())
                            {
                                <p><em>Loading ...</em></p>
                            }
                            @if (AllBS.Any())
                            {
                                <div class="card-body">
                                   <div class="table-responsive">
                                        @foreach (var group in GroupedBSByChucVu)
                                        {
                                            <h3>@group.Key -- Số lượng: @group.Value.Count người</h3> <!-- Hiển thị Chucvu -->
                                            <table class="table table-striped table-hover">
                                                <thead>
                                                    <tr>
                                                        <th>id</th>
                                                        <th>Ảnh</th>
                                                        <th>Họ Tên</th>
                                                        <th>Chức Vụ</th>
                                                        <th>Số Điện Thoại</th>
                                                        <th></th>
                                                        <th></th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var doctor in group.Value)
                                                    {
                                                        <tr>
                                                            <td>@doctor.Id</td>
                                                            <td ><img src="@doctor.Anh"></td>
                                                            <td >@doctor.Hoten</td>
                                                            <td>@doctor.Chucvu</td>
                                                            <td>@doctor.SDT</td>
                                                            <td>
                                                                <a class="btn btn-success" href="/BSedit/@doctor.Id"> Edit </a>
                                                            </td>
                                                            <td>
                                                                <a class="btn btn-danger" href="#" @onclick="() => ConfirmDelete(doctor.Id)"> Delete </a>
                                                            </td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        }
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-info"> Rỗng.....</div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@code {
    public List<BacSi> AllBS { get; set; } = new();
    public Dictionary<string, List<BacSi>> GroupedBSByChucVu { get; set; } = new Dictionary<string, List<BacSi>>();

    protected override async Task OnInitializedAsync()
    {
        await checkbs();
        await LoadAllBS();
        GroupBSByChucVu();
    }

    public async Task LoadAllBS()
    {
        var bs = await bacsiservice.getallAsync();
        AllBS.Clear();

        if (bs is null) return;
        foreach (var doctor in bs)
        {
            AllBS.Add(doctor);
        }
    }
    public async Task checkbs()
    {
        var authState = await checkbss.GetAuthenticationStateAsync();
        var UserName = authState.User.Identity.Name;
        var bs = await bacsiservice.getbyemail(UserName);
        if (bs == null)
        {
            navigation.NavigateTo("/err");
        }
    }
    public void GroupBSByChucVu()
    {
        GroupedBSByChucVu = AllBS.GroupBy(bs => bs.Chucvu)
                                .ToDictionary(g => g.Key, g => g.ToList());
    }
    public async Task ConfirmDelete(int id)
    {
        var doctorToDelete = AllBS.FirstOrDefault(d => d.Id == id);
        if (await JS.InvokeAsync<bool>("confirm", "Bạn có chắc muốn xóa?"))
        {
            AllBS.Remove(doctorToDelete);
            navigation.NavigateTo("/BSdelete/" + id);
        }
        else
        {
            navigation.NavigateTo("/ListBS");
        }
    }
}




