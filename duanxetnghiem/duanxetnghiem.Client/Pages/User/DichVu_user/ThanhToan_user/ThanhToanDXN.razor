@page "/ThanhToandxn/{id}"
@rendermode InteractiveAuto
@inject NavigationManager navigation;
@attribute [Authorize]

<div class="container">
    <div class="left-panel">
        <div class="panel">
            <div class="panel-header">Thông Tin Khách Hàng</div>
            <div class="panel-body">
                <div>
                    <label>Họ Tên</label>
                    <input value="@user.Hoten" class="form-control" readonly>
                </div>
                <div>
                    <label>Ngày sinh</label>
                    <input value="@user.Ngaysinh.ToString("dd/MM/yyyy")" class="form-control" readonly>
                </div>
                <div>
                    <label>Số Điện Thoại</label>
                    <input value="@user.SDT" class="form-control" readonly>
                </div>
                <div>
                    <label>Địa Chỉ</label>
                    <input value="@user.Diachi" class="form-control" readonly>
                </div>
                <div>
                    <label>Email</label>
                    <input value="@user.Email" class="form-control" readonly>
                </div>
                <div>
                    <label>Giới Tính</label>
                    <input value="@gioitinh(user.Gioitinh)" class="form-control" readonly>
                </div>
            </div>
        </div>
        <div class="panel">
            <div class="panel-header">Các Gói Đã Đăng Ký</div>
            <div class="panel-body">
                <table>
                    <thead>
                        <tr>
                            <th>
                                Id đơn
                            </th>
                            <th>
                                Tên người dùng
                            </th>
                            <th>
                                Số Tiền
                            </th>
                        </tr>
                    </thead>
                    @foreach (var goi in AllHD)
                    {
                        <tr>
                            <td><a href="XCTDon/@goi.id">@goi.id</a></td>
                            <td>@goi.hoten</td>
                            <td>@goi.sotien</td>
                        </tr>
                    }
                    <tr>
                        <td colspan="3">Tổng Thành Tiền : @tongtien VND</td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
    <div class="right-panel">
        <div class="panel">
            <div class="panel-header">Thanh Toán</div>
            <div class="panel-body">
                <div class="panel-body payment-content">
                    <img src="QR.jpg" alt="QR Code" class="qr-code">
                    <div class="payment-info">
                        <div>
                            Nội Dung Chuyển Tiền :
                            <div class="input-group mb-2">
                                <div class="input-group-prepend">
                                    <div onclick="copyText()" class="input-group-text">Copy</div>
                                    <input value="@id" type="text" class="form-control" id="idTextbox">
                                </div>
                            </div>
                        </div>
                        <!-- Bạn có thể thêm các phần khác tùy ý ở đây -->
                    </div>
                    <div class="payment-methods">
                        Chọn Hình Thức Thanh Toán Trước:
                        <div>
                            <button @onclick="bamuoi" class="@class1">30%</button>
                            <button @onclick="mottram" class="@class2">100%</button>
                        </div>
                    </div>
                    <div class="payment-amount">
                        <div>Số Tiền Cần Chuyển: @tientttruoc VND</div>
                        <!-- Bạn có thể thêm các phần khác tùy ý ở đây -->
                    </div>
                </div>
                <button @onclick="xacnhan" class="btn btn-success" style="width:100%">Đã Chuyển Tiền</button>
            </div>
        </div>
        <div class="panel">
            <div class="panel-header">Hướng Dẫn Thanh Toán</div>
            <div class="panel-body">
                <!-- Thêm hướng dẫn thanh toán -->
                <div>
                    <div class="section-title">Bước 1: Truy cập app ngân hàng bạn đang sử dụng hoặc bất kỳ ví điện tử mà bạn có, chọn chức năng quét mã QR:(Minh họa:app ViettinBank Ipay)</div>
                    <img style="width:100%" src="HD1.jpg" alt="Hướng dẫn bước 1">
                </div>
                <div>
                    <div class="section-title">Bước 2: Nhập số tiền cần chuyển và nội dung chuyển tiền chính xác để thực hiện thanh toán</div>
                    <img style="width:100%" src="HD2.jpg" alt="Hướng dẫn bước 2">
                </div>
            </div>
        </div>
    </div>
</div>
@code {
    [Parameter]
    public string id { get; set; }

    [Inject]
    protected AuthenticationStateProvider AuthenticationStateProvider { get; set; }
    public string UserName { get; set; }
    private User user = new User();
    public DonXetNghiem Input { get; set; } = new();
    public List<User> alluser { get; set; } = new();
    public List<DXNandGXN> dxn { get; set; } = new();
    public long tongtien = 0;
    public long tientttruoc;
    string class1 = "btn btn-success";
    string class2 = "btn btn-outline-success";
    public List<DonXetNghiem> AllDXN { get; set; } = new();
    public List<ThanhToan> AllTT { get; set; } = new();
    public List<hd> AllHD { get; set; } = new();
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await keolen();
        }
    }
    public async Task keolen()
    {
        await JSRuntime.InvokeVoidAsync("scrollToBottom");
    }
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        UserName = authState.User.Identity.Name;
        user = await Usertservice.getuserbyemail(UserName);
        alluser = await Usertservice.getalluserbyemailAsync(UserName);
        if (!string.IsNullOrEmpty(id))
        {
            string[] numbers = id.Split(';');
            foreach (string number in numbers)
            {
                if (!string.IsNullOrEmpty(number))
                {
                    if (int.TryParse(number, out int a))
                    {
                        var dxn = await DXNservice.getbyid(a);
                        AllDXN.Add(dxn);
                    }
                    else
                    {
                        // Handle the case where the string is not a valid integer
                        // For example, log the error or show a message to the user
                    }
                }
            }
        }
        await loadtongtien();
        tientttruoc = tongtien * 30 / 100;

    }
    private async void xacnhan()
    {
        foreach (var dxn in AllDXN)
        {
            dxn.Trangthai = "Đã Chuyển Tiền";
            await DXNservice.updateAsync(dxn);

        }
        foreach (var tt in AllTT)
        {
            tt.NgayTT1 = DateTime.Now;
            if (tientttruoc < tongtien)
            {
                tt.trangthai = "30%";
                Tinhtrang ttrang = new Tinhtrang
                    {
                        DonXetNghiemId = tt.DonXetNghiemId,
                        thoigian = DateTime.Now,
                        trangthai = "Đơn đã được thanh toán 30% (" + tt.Tongtien * 30 / 100 + " VND)"
                    };
                await TTrangservice.addAsync(ttrang);
            }
            else
            {
                tt.trangthai = "Đã Thanh Toán";
                Tinhtrang ttrang = new Tinhtrang
                    {
                        DonXetNghiemId = tt.DonXetNghiemId,
                        thoigian = DateTime.Now,
                        trangthai = "Đơn đã được thanh toán toàn bộ(" + tt.Tongtien + " VND)"
                    };
                await TTrangservice.addAsync(ttrang);
            }
            tt.DaTT1 = tientttruoc;
            await TTservice.updateAsync(tt);
        }

        navigation.NavigateTo("/camondxn/" + id);
    }
    private async Task loadtongtien()
    {
        foreach (var dxn in AllDXN)
        {
            var tt = await TTservice.getbyidDXNAsync(dxn.Id);
            tongtien += tt.Tongtien;
            AllTT.Add(tt);
            foreach (var us in alluser)
            {
                if (dxn.UserId == us.Id)
                {
                    hd a = new()
                        {
                            id = dxn.Id,
                            hoten = us.Hoten,
                            sotien = tt.Tongtien
                        };
                    AllHD.Add(a);
                }
            }
        }
    }
    private void bamuoi()
    {
        tientttruoc = tongtien * 30 / 100;
        class1 = "btn btn-success";
        class2 = "btn btn-outline-success";
    }
    private void mottram()
    {
        tientttruoc = tongtien;
        class2 = "btn btn-success";
        class1 = "btn btn-outline-success";
    }
    private String gioitinh(bool a)
    {
        if (a)
        {
            return "Nam";
        }
        else
        {
            return "Nữ";
        }
    }
    public class hd
    {
        public int id { get; set; }
        public long sotien { get; set; }
        public string hoten { get; set; }
    }
}
<script>
    function copyText() {
        // Lấy nội dung của textbox
        var idTextbox = document.getElementById("idTextbox");
        var id = idTextbox.value;

        // Sao chép nội dung vào clipboard
        navigator.clipboard.writeText(id).then(function () {
            // Hiển thị thông báo đã sao chép thành công
            var copiedContent = document.getElementById("copiedContent");
            copiedContent.textContent = "Đã sao chép: " + id;
        }, function (err) {
            console.error('Không thể sao chép: ', err);
        });
    }
</script>
<script>
    window.scrollToBottom = () => {
        window.scrollTo(0, 0);
    }
</script>