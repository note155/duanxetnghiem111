@page "/ThanhToan2/{id:int}"

@rendermode InteractiveAuto
@inject NavigationManager navigation;
@attribute [Authorize]
<div class="container">
    <div class="left-panel">
        <div class="panel">
            <div class="panel-header">Thông Tin Khách Hàng</div>
            <div class="panel-body">
                <div>
                    <label>Họ Tên</label>
                    <input value="@user.Hoten" class="form-control" readonly>
                </div>
                <div>
                    <label>Ngày sinh</label>
                    <input value="@user.Ngaysinh.ToString("dd/MM/yyyy")" class="form-control" readonly>
                </div>
                <div>
                    <label>Số Điện Thoại</label>
                    <input value="@user.SDT" class="form-control" readonly>
                </div>
                <div>
                    <label>Địa Chỉ</label>
                    <input value="@user.Diachi" class="form-control" readonly>
                </div>
                <div>
                    <label>Email</label>
                    <input value="@user.Email" class="form-control" readonly>
                </div>
                <div>
                    <label>Giới Tính</label>
                    <input value="@gioitinh(user.Gioitinh)" class="form-control" readonly>
                </div>
            </div>
        </div>
        <div class="panel">
            <div class="panel-header">Các Gói Đã Đăng Ký</div>
            <div class="panel-body">
                <table>
                    <thead>
                        <tr>
                            <th>
                                Tên Gói
                            </th>
                            <th>
                                Số Tiền
                            </th>
                        </tr>
                    </thead>
                    @foreach (var goi in gxndachon)
                    {
                        <tr>
                            <td>@goi.TenGoi</td>
                            <td>@goi.Gia</td>
                        </tr>
                    }
                    <tr>
                        <td colspan="2">Tổng Thành Tiền : @tongtien VND</td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
    <div class="right-panel">
        <div class="panel">
            <div class="panel-header">Thanh Toán</div>
            <div class="panel-body">
                <div class="panel-body payment-content">
                    <img src="QR.jpg" alt="QR Code" class="qr-code">
                    <div class="payment-info">
                        <div>
                            Bạn đã thanh toán lần 1: số tiền :@tt.DaTT1 VND -- ngày : @tt.NgayTT1 
                        </div>
                        <div>Nội Dung Chuyển Tiền : @Input.Id</div>
                        <!-- Bạn có thể thêm các phần khác tùy ý ở đây -->
                    </div>
                    <div class="payment-methods">
                        Hình Thức Thanh Toán :
                        <div>
                            <button class="@class1">70%</button>
                        </div>
                    </div>
                    <div class="payment-amount">
                        <div>Số Tiền Cần Chuyển: @tientttruoc VND</div>
                        <!-- Bạn có thể thêm các phần khác tùy ý ở đây -->
                    </div>
                </div>
                <button @onclick="xacnhan" class="btn btn-success" style="width:100%">Đã Chuyển Tiền</button>
            </div>
        </div>
        <div class="panel">
            <div class="panel-header">Hướng Dẫn Thanh Toán</div>
            <div class="panel-body">
                <!-- Thêm hướng dẫn thanh toán -->
                <div>
                    <div class="section-title">Bước 1: Truy cập app ngân hàng bạn đang sử dụng hoặc bất kỳ ví điện tử mà bạn có, chọn chức năng quét mã QR:(Minh họa:app ViettinBank Ipay)</div>
                    <img style="width:100%" src="HD1.jpg" alt="Hướng dẫn bước 1">
                </div>
                <div>
                    <div class="section-title">Bước 2: Nhập số tiền cần chuyển và nội dung chuyển tiền chính xác để thực hiện thanh toán</div>
                    <img style="width:100%" src="HD2.jpg" alt="Hướng dẫn bước 2">
                </div>
            </div>
        </div>
    </div>
</div>
@code {
    [Parameter]
    public int id { get; set; }

    private User user = new User();
    public DonXetNghiem Input { get; set; } = new();
    public List<GoiXetNghiem> allGXN { get; set; } = new();
    public List<GoiXetNghiem> gxndachon { get; set; } = new();
    public List<DXNandGXN> dxn { get; set; } = new();
    public long tongtien = 0;
    public long tientttruoc;
    string class1 = "btn btn-success";
    public ThanhToan tt { get; set; } = new ThanhToan();

    protected override async Task OnInitializedAsync()
    {
        Input = await DXNservice.getbyid(id);
        user = await Usertservice.getuserbyid(Input.UserId);
        allGXN = await GXNservice.getallAsync();
        dxn = await DXNservice.getallGXNAsync(id);
        loadgxndachon();
        tientttruoc = tongtien * 70 / 100;
        tt = await TTservice.getbyidDXNAsync(id);
    }
    private async void xacnhan()
    {
        tt.NgayTT2 = DateTime.Now;
        tt.trangthai = "Đã Thanh Toán";
        tt.DaTT2 = tientttruoc;
        await TTservice.updateAsync(tt);
        tt.trangthai = "Đã Thanh Toán";
        Tinhtrang ttrang = new Tinhtrang
            {
                DonXetNghiemId = tt.DonXetNghiemId,
                thoigian = DateTime.Now,
                trangthai = "Đơn đã được thanh toán toàn bộ(" + tt.Tongtien + " VND)"
            };
        await TTrangservice.addAsync(ttrang);
        btnPay_Click();
        navigation.NavigateTo(a);
    }
    private void loadgxndachon()
    {
        foreach (var a in dxn)
        {

            foreach (var b in allGXN)
            {
                if (b.Id == a.GoiXetNghiemId)
                {
                    gxndachon.Add(b);
                    tongtien += b.Gia;
                }
            }
        }
    }
    private String gioitinh(bool a)
    {
        if (a)
        {
            return "Nam";
        }
        else
        {
            return "Nữ";
        }
    }
    string a = "", b = "192.168.1.34";
    public class OrderInfo
    {
        public long OrderId { get; set; }
        public long Amount { get; set; }
        public string OrderDesc { get; set; }
        public DateTime CreatedDate { get; set; }
        public string Status { get; set; }
        public long PaymentTranId { get; set; }
        public string BankCode { get; set; }
        public string PayStatus { get; set; }
    }

    protected void btnPay_Click()
    {
        try
        {
            // Get Config Info

            string vnp_Returnurl = " /camon/" + id; // URL nhan ket qua tra ve
            string vnp_Url = "https://sandbox.vnpayment.vn/paymentv2/vpcpay.html"; // URL thanh toan cua VNPAY
            string vnp_TmnCode = "CAX6LFP5"; // Ma định danh merchant kết nối (Terminal Id)
            string vnp_HashSecret = "AI4J5VFN5YY97S6V5U13W412N5JATXKX"; // Secret Key

            // Get payment input
            OrderInfo order = new OrderInfo
                {
                    OrderId = DateTime.Now.Ticks, // Giả lập mã giao dịch hệ thống merchant gửi sang VNPAY
                    Amount = tientttruoc, // Giả lập số tiền thanh toán hệ thống merchant gửi sang VNPAY 100,000 VND
                    Status = "0", // Trạng thái thanh toán "chờ thanh toán"
                    CreatedDate = DateTime.Now
                };

            // Save order to db (optional)

            // Build URL for VNPAY
            VnPayLibrary vnpay = new VnPayLibrary();

            vnpay.AddRequestData("vnp_Version", VnPayLibrary.VERSION);
            vnpay.AddRequestData("vnp_Command", "pay");
            vnpay.AddRequestData("vnp_TmnCode", vnp_TmnCode);
            vnpay.AddRequestData("vnp_Amount", (order.Amount * 100).ToString());
            vnpay.AddRequestData("vnp_BankCode", "VNBANK");
            vnpay.AddRequestData("vnp_CreateDate", order.CreatedDate.ToString("yyyyMMddHHmmss"));
            vnpay.AddRequestData("vnp_CurrCode", "VND");
            vnpay.AddRequestData("vnp_IpAddr", b);
            vnpay.AddRequestData("vnp_Locale", "vn");
            vnpay.AddRequestData("vnp_OrderInfo", "Thanh toan don hang:" + order.OrderId);
            vnpay.AddRequestData("vnp_OrderType", "other"); // default value: other
            vnpay.AddRequestData("vnp_ReturnUrl", vnp_Returnurl);
            vnpay.AddRequestData("vnp_TxnRef", order.OrderId.ToString());

            // Add Params of 2.1.0 Version (optional)
            // Billing

            string paymentUrl = vnpay.CreateRequestUrl(vnp_Url, vnp_HashSecret);
            a = paymentUrl;
        }
        catch (Exception ex)
        {

        }

    }
}